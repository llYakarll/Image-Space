<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANyUAADclAAU3JQAOtyU
        ADrclAA63JQAOtyUADrclAA63JQAOtyUADrclAA63JQAOtyUADrclAA63JQAOtyUADrclAA63JQAOtyU
        ADrclAA63JQAOtyUADrclAA63JQAOtyUADrclAA63JQAOtyUADrclAAU3JQAAAAAAAAAAAAA3JQAANyU
        ACDclABb3JQAW9yUAFvclABb3JQAW9yUAFvclABb3JQAW9yUAFvclABb3JQAW9yUAFvclABb3JQAW9yU
        AFvclABb3JQAW9yUAFvclABb3JQAW9yUAFvclABb3JQAW9yUAFvclABb3JQAW9yUACDclAAAAAAAAAAA
        AADclAAA3JQAH9yUAFnclABZ3JQAWdyUAFnclABZ3JQAWdyUAFnclABZ3JQAWdyUAFnclABZ3JQAWdyU
        AFnclABZ3JQAWdyUAFnclABZ3JQAWdyUAFnclABZ3JQAWdyUAFnclABZ3JQAWdyUAFnclABZ3JQAH9yU
        AAAAAAAAAAAAANyUAADclAAf3JQAWdyUAFnclABY3JQAWNyUAFnclABZ3JQAWdyUAFnclABZ3JQAWdyU
        AFnclABZ3JQAWdyUAFnclABZ3JQAWdyUAFnclABZ3JQAWdyUAFnclABZ3JQAWdyUAFjclABY3JQAWdyU
        AFnclAAf3JQAAAAAAAAAAAAA3JQAANyUAB/clABZ3JQAWNyUAHfclAC73ZQAxd2UAMXdlADF3ZQAxd2U
        AMXdlADF3ZQAxd2UAMXdlADF3ZQAxd2UAMXdlADF3ZQAxd2UAMXdlADF3ZQAxd2UAMXdlADF3JQAu9yU
        AHfclABY3JQAWdyUAB/clAAAAAAAAAAAAADclAAA3JQAH9yUAFnclABY3ZQAu92UAP/dlAD/3ZQA/92U
        AP/dlAD/3ZQA/92UAP/dlAD/3ZQA/92UAP/dlAD/3ZQA/92UAP/dlAD/3ZQA/92UAP/dlAD/3ZQA/92U
        AP/dlAD/3JQAudyUAFjclABZ3JQAH9yUAAAAAAAAAAAAANyUAADclAAf3JQAWdyUAFnclAC93ZQA/92U
        AP/dlAD/3ZQA/92UAP/dlAD/3ZQA/92UAP/dlAD/3ZQA/92UAP/dlAD/3ZQA/92UAP/dlAD/3ZQA/92U
        AP/dlAD/3ZQA/92UAP/dlACr3JQAWNyUAFnclAAf3JQAAAAAAAAAAAAA3JQAANyUAB/clABZ3JQAV92U
        AKXdlAD/3ZQA/92UAP/dlAD/3ZQA/92UAP/dlAD/3ZQA/92UAP/dlAD/3ZQA/92UAP/dlAD/3ZQA/92U
        AP/dlAD/3ZQA/92UAP/dlAD/3ZQA5tyUAHXclABY3JQAWdyUAB/clAAAAAAAAAAAAADclAAA3JQAH9yU
        AFnclABX3JQAht2UAPjdlAD/3ZQA/92UAP/dlAD/3ZQA/92UAP/dlAD/3ZQA/92UAP/dlAD23ZQAwd2U
        AJndlACd3ZMAu92UAObdlAD93ZQA/92UAO3clACP3JQAWNyUAFnclABZ3JQAH9yUAAAAAAAAAAAAANyU
        AADclAAf3JQAWdyUAFjclABo3ZQA4N2UAP/dlAD/3ZQA/92UAP/dlAD/3ZQA/92UAP/dlAD/3ZQA8d2U
        AJnclABc3JQAVtyUAFbclABZ3JQAb9yUAKPdlAC43JQAgdyUAFnclABZ3JQAWdyUAFnclAAf3JQAAAAA
        AAAAAAAA3JQAANyUAB/clABZ3JQAWdyUAFjdlACv3ZQA/92UAP/dlAD/3ZQA/92UAP/dlAD/3ZQA/92U
        APjclACd3JQAWdyUAFjclABZ3JQAWdyUAFnclABY3JQAV9yUAFjclABX3JQAWdyUAFnclABZ3JQAWdyU
        AB/clAAAAAAAAAAAAADclAAA3JQAH9yUAFnclABZ3JQAV92UAHbdlADs3ZQA/92UAP/dlAD/3ZQA/92U
        AP/dlAD+3ZQAtdyUAF3clABY3JQAWdyUAFnclABZ3JQAWdyUAFnclABZ3JQAWdyUAFnclABZ3JQAWdyU
        AFnclABZ3JQAH9yUAAAAAAAAAAAAANyUAADclAAf3JQAWdyUAFnclABZ3JQAWd2UAKzdlAD+3ZQA/92U
        AP/dlAD/3ZQA/92UANDclABn3JQAWNyUAFnclABZ3JQAWdyUAFnclABZ3JQAV9yUAFbclABX3JQAWdyU
        AFnclABZ3JQAWdyUAFnclAAf3JQAAAAAAAAAAAAA3JQAANyUAB/clABZ3JQAWdyUAFnclABY3JQAZt2U
        AMrdlAD/3ZQA/92UAP/dlADe3JQAddyUAFfclABZ3JQAWdyUAFnclABZ3JQAWdyUAFnclABz3ZQAj9yU
        AH/clABe3JQAWNyUAFnclABZ3JQAWdyUAB/clAAAAAAAAAAAAADclAAA3JQAH9yUAFnclABZ3JQAWdyU
        AFnclABY3JQAa92UALrdlADm3ZQAy9yUAHnclABY3JQAWdyUAFnclABZ3JQAWdyUAFnclABY3JQAjN2U
        AOjdlAD93ZQA9d2UAK/clABe3JQAWdyUAFnclABZ3JQAH9yUAAAAAAAAAAAAANyUAADclAAf3JQAWdyU
        AFnclABZ3JQAWdyUAFnclABY3JQAXNyUAGnclABg3JQAWNyUAFnclABZ3JQAWdyUAFnclABZ3JQAWNyU
        AGPdlADX3ZQA/92UAP/dlAD/3ZQA9NyUAH/clABX3JQAWdyUAFnclAAf3JQAAAAAAAAAAAAA3JQAANyU
        AB/clABZ3JQAWdyUAFnclABZ3JQAWdyUAFnclABZ3JQAWNyUAFnclABZ3JQAWdyUAFnclABZ3JQAWdyU
        AFnclABY3JQAat2UAOfdlAD/3ZQA/92UAP/dlAD93JQAjtyUAFbclABZ3JQAWdyUAB/clAAAAAAAAAAA
        AADclAAA3JQAH9yUAFnclABZ3JQAWdyUAFnclABZ3JQAWdyUAFnclABZ3JQAWdyUAFnclABZ3JQAWdyU
        AFnclABZ3JQAWdyUAFnclABe3ZQAxN2UAP/dlAD/3ZQA/92UAOfclABz3JQAWNyUAFnclABZ3JQAH9yU
        AAAAAAAAAAAAANyUAADclAAf3JQAWdyUAFnclABZ3JQAWdyUAFnclABZ3JQAWdyUAFnclABZ3JQAWdyU
        AFnclABZ3JQAWdyUAFnclABZ3JQAWdyUAFjclABy3ZQAxN2UAOjdlADX3JQAjNyUAFnclABZ3JQAWdyU
        AFnclAAf3JQAAAAAAAAAAAAA3JQAANyUAB/clABZ3JQAWdyUAFnclABZ3JQAWdyUAFnclABZ3JQAWdyU
        AFnclABZ3JQAWdyUAFnclABZ3JQAWdyUAFnclABZ3JQAWdyUAFjclABe3JQAatyUAGPclABY3JQAWdyU
        AFnclABZ3JQAWdyUAB/clAAAAAAAAAAAAADclAAA3JQAINyUAFvclABb3JQAW9yUAFvclABb3JQAW9yU
        AFvclABb3JQAW9yUAFvclABb3JQAW9yUAFvclABb3JQAW9yUAFvclABb3JQAW9yUAFrclABZ3JQAWtyU
        AFvclABb3JQAW9yUAFvclABb3JQAINyUAAAAAAAAAAAAANyUAADclAAU3JQAOtyUADrclAA63JQAOtyU
        ADrclAA63JQAOtyUADrclAA63JQAOtyUADrclAA63JQAOtyUADrclAA63JQAOtyUADrclAA63JQAOtyU
        ADrclAA63JQAOtyUADrclAA63JQAOtyUADrclAAU3JQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////////////////////AAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAAD//////////////////////////8=
</value>
  </data>
</root>